name: Release

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#          - os: ubuntu-latest
#            artifact_name: mything
#            asset_name: mything-linux-amd64
          - os: windows-latest
            artifact_name: FirstBreaksPicking-0.4.1.msi
            asset_name: FirstBreaksPicking.msi
#          - os: macos-latest
#            artifact_name: mything
#            asset_name: mything-macos-amd64

    env:
      RELEASE_BODY: ""
    steps:
    - name: Checkout
      uses: actions/checkout@v3
#    - name: Set up Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: "3.8.0"
#    - name: Install Builder
#      run: python -m pip install briefcase
#    - name: Create Package
#      run: briefcase create
#    - name: Build Package
#      run: briefcase build
#    - name: Create installer
#      run: briefcase package --adhoc-sign
#    - name: Body
#      run:
#    - name: read release
#      id: read_release
#      shell: powershell
#      run: |
#        $RELEASE_BODY = [IO.File]::ReadAllText("last_release.md")
#        echo "::set-output name=file_content::$RELEASE_BODY"
    - name: Create sample file for release
      shell: pwsh
      run: |
        $sampleText = "This is the content of my sample file."
        New-Item -Path .\dist -ItemType Directory -Force
        New-Item -Path .\dist -Name test1.txt -ItemType "file" -Value $sampleText
        New-Item -Path .\dist -Name test2.txt -ItemType "file" -Value $sampleText
    - name: Read release.md and use it as a body of new release
      id: read_release
      shell: pwsh
      run: |
        $r = Get-Content -Raw -Path .\last_release.md  # <--- Read release.md (Provide correct path as per your repo)
        $r = $r -replace '%', '%25'                        # Multiline escape sequences for %
        $r = $r -replace "`n", '%0A'                       # Multiline escape sequences for '\n'
        $r = $r -replace "`r", '%0D'                       # Multiline escape sequences for '\r'
        echo "RELEASE_BODY=$r" >> $env:GITHUB_OUTPUT          # <--- Set output variable
    - name: Upload Binaries to Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file_glob: True
        file: dist/*
        body: |
          ${{ steps.read_release.outputs.RELEASE_BODY }}

#    - name: Asset1
#      run: New-Item test.txt
#    - name: Upload binaries to release
#      uses: svenstaro/upload-release-action@v2
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: test.txt
#        asset_name: test.txt
#        body: "sdfkljdl;skjg"
#        tag: ${{ github.ref }}